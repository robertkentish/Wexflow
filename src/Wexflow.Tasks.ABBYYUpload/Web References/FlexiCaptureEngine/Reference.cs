//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Wexflow.Tasks.ABBYYUpload.FlexiCaptureEngine {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FlexiCaptureWebServiceSoap", Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Project[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProcessingStage[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Template[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistrationPropertyDef[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BatchType[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BatchTypeIdentity[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegistrationProperty[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Page[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrderItem[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Batch[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LogRecord[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicenseCustomFeature[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServerRequest[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Queue[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Role[]))]
    public partial class FlexiCaptureWebServiceApiVersion3 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback OpenSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessingStagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTypeTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllowedBatchTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchIdsRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveBatchItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchPercentCompletedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentResultsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadDocumentResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSessionExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePageImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDocumentPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCustomFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCustomFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCustomFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomFileNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteToLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableTasksByStageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskByStageIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostponeTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostponedTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTaskToExceptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasRightsForBatchTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSettingValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSettingValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserIfNotExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAvailableQueuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTaskPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDocumentPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentUserIdentityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FlexiCaptureWebServiceApiVersion3() {
            this.Url = global::Wexflow.Tasks.ABBYYUpload.Properties.Settings.Default.Wexflow_Tasks_ABBYYUpload_FlexiCaptureEngine_FlexiCaptureWebServiceApiVersion3;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event OpenSessionCompletedEventHandler OpenSessionCompleted;
        
        /// <remarks/>
        public event GetSessionInfoCompletedEventHandler GetSessionInfoCompleted;
        
        /// <remarks/>
        public event GetProjectsCompletedEventHandler GetProjectsCompleted;
        
        /// <remarks/>
        public event GetProjectsForUserCompletedEventHandler GetProjectsForUserCompleted;
        
        /// <remarks/>
        public event GetProcessingStagesCompletedEventHandler GetProcessingStagesCompleted;
        
        /// <remarks/>
        public event GetTemplatesCompletedEventHandler GetTemplatesCompleted;
        
        /// <remarks/>
        public event GetBatchTypeTemplatesCompletedEventHandler GetBatchTypeTemplatesCompleted;
        
        /// <remarks/>
        public event CloseSessionCompletedEventHandler CloseSessionCompleted;
        
        /// <remarks/>
        public event OpenProjectCompletedEventHandler OpenProjectCompleted;
        
        /// <remarks/>
        public event CloseProjectCompletedEventHandler CloseProjectCompleted;
        
        /// <remarks/>
        public event GetBatchTypesCompletedEventHandler GetBatchTypesCompleted;
        
        /// <remarks/>
        public event GetAllowedBatchTypesCompletedEventHandler GetAllowedBatchTypesCompleted;
        
        /// <remarks/>
        public event AddNewBatchCompletedEventHandler AddNewBatchCompleted;
        
        /// <remarks/>
        public event DeleteBatchCompletedEventHandler DeleteBatchCompleted;
        
        /// <remarks/>
        public event AddNewImageCompletedEventHandler AddNewImageCompleted;
        
        /// <remarks/>
        public event GetBatchIdsRangeCompletedEventHandler GetBatchIdsRangeCompleted;
        
        /// <remarks/>
        public event AddNewDocumentCompletedEventHandler AddNewDocumentCompleted;
        
        /// <remarks/>
        public event AddNewPageCompletedEventHandler AddNewPageCompleted;
        
        /// <remarks/>
        public event MoveBatchItemCompletedEventHandler MoveBatchItemCompleted;
        
        /// <remarks/>
        public event ProcessBatchCompletedEventHandler ProcessBatchCompleted;
        
        /// <remarks/>
        public event GetBatchPercentCompletedCompletedEventHandler GetBatchPercentCompletedCompleted;
        
        /// <remarks/>
        public event GetDocumentsCompletedEventHandler GetDocumentsCompleted;
        
        /// <remarks/>
        public event GetDocumentResultsListCompletedEventHandler GetDocumentResultsListCompleted;
        
        /// <remarks/>
        public event LoadDocumentResultCompletedEventHandler LoadDocumentResultCompleted;
        
        /// <remarks/>
        public event IsSessionExistsCompletedEventHandler IsSessionExistsCompleted;
        
        /// <remarks/>
        public event GetBatchTypeCompletedEventHandler GetBatchTypeCompleted;
        
        /// <remarks/>
        public event GetBatchesCompletedEventHandler GetBatchesCompleted;
        
        /// <remarks/>
        public event GetBatchCompletedEventHandler GetBatchCompleted;
        
        /// <remarks/>
        public event UpdateBatchCompletedEventHandler UpdateBatchCompleted;
        
        /// <remarks/>
        public event OpenBatchCompletedEventHandler OpenBatchCompleted;
        
        /// <remarks/>
        public event CloseBatchCompletedEventHandler CloseBatchCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event DeletePageCompletedEventHandler DeletePageCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event ReplacePageImageCompletedEventHandler ReplacePageImageCompleted;
        
        /// <remarks/>
        public event SetDocumentPropertiesCompletedEventHandler SetDocumentPropertiesCompleted;
        
        /// <remarks/>
        public event LoadCustomFileCompletedEventHandler LoadCustomFileCompleted;
        
        /// <remarks/>
        public event SaveCustomFileCompletedEventHandler SaveCustomFileCompleted;
        
        /// <remarks/>
        public event RemoveCustomFileCompletedEventHandler RemoveCustomFileCompleted;
        
        /// <remarks/>
        public event GetCustomFileNamesCompletedEventHandler GetCustomFileNamesCompleted;
        
        /// <remarks/>
        public event LoadAttachmentCompletedEventHandler LoadAttachmentCompleted;
        
        /// <remarks/>
        public event SaveAttachmentCompletedEventHandler SaveAttachmentCompleted;
        
        /// <remarks/>
        public event RemoveAttachmentCompletedEventHandler RemoveAttachmentCompleted;
        
        /// <remarks/>
        public event GetAttachmentNamesCompletedEventHandler GetAttachmentNamesCompleted;
        
        /// <remarks/>
        public event WriteToLogCompletedEventHandler WriteToLogCompleted;
        
        /// <remarks/>
        public event GetAvailableTasksCompletedEventHandler GetAvailableTasksCompleted;
        
        /// <remarks/>
        public event GetAvailableTasksByStageIdCompletedEventHandler GetAvailableTasksByStageIdCompleted;
        
        /// <remarks/>
        public event GetTaskInfoCompletedEventHandler GetTaskInfoCompleted;
        
        /// <remarks/>
        public event CreateTaskCompletedEventHandler CreateTaskCompleted;
        
        /// <remarks/>
        public event OpenTaskCompletedEventHandler OpenTaskCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetTaskByStageIdCompletedEventHandler GetTaskByStageIdCompleted;
        
        /// <remarks/>
        public event GetCurrentTaskCompletedEventHandler GetCurrentTaskCompleted;
        
        /// <remarks/>
        public event GetTaskDocumentsCompletedEventHandler GetTaskDocumentsCompleted;
        
        /// <remarks/>
        public event CloseTaskCompletedEventHandler CloseTaskCompleted;
        
        /// <remarks/>
        public event CancelTaskCompletedEventHandler CancelTaskCompleted;
        
        /// <remarks/>
        public event PostponeTaskCompletedEventHandler PostponeTaskCompleted;
        
        /// <remarks/>
        public event GetPostponedTasksCompletedEventHandler GetPostponedTasksCompleted;
        
        /// <remarks/>
        public event SendTaskToExceptionCompletedEventHandler SendTaskToExceptionCompleted;
        
        /// <remarks/>
        public event SendTaskCompletedEventHandler SendTaskCompleted;
        
        /// <remarks/>
        public event GetNewTicketCompletedEventHandler GetNewTicketCompleted;
        
        /// <remarks/>
        public event UpdateTicketCompletedEventHandler UpdateTicketCompleted;
        
        /// <remarks/>
        public event ReleaseTicketCompletedEventHandler ReleaseTicketCompleted;
        
        /// <remarks/>
        public event HasRightsForBatchTypeCompletedEventHandler HasRightsForBatchTypeCompleted;
        
        /// <remarks/>
        public event GetSettingValueCompletedEventHandler GetSettingValueCompleted;
        
        /// <remarks/>
        public event SetSettingValueCompletedEventHandler SetSettingValueCompleted;
        
        /// <remarks/>
        public event FindUserCompletedEventHandler FindUserCompleted;
        
        /// <remarks/>
        public event AddUserIfNotExistCompletedEventHandler AddUserIfNotExistCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetAvailableUsersCompletedEventHandler GetAvailableUsersCompleted;
        
        /// <remarks/>
        public event CreateRequestCompletedEventHandler CreateRequestCompleted;
        
        /// <remarks/>
        public event DeleteRequestCompletedEventHandler DeleteRequestCompleted;
        
        /// <remarks/>
        public event GetRequestStatusCompletedEventHandler GetRequestStatusCompleted;
        
        /// <remarks/>
        public event SetRequestStatusCompletedEventHandler SetRequestStatusCompleted;
        
        /// <remarks/>
        public event GetRequestsCompletedEventHandler GetRequestsCompleted;
        
        /// <remarks/>
        public event GetAvailableQueuesCompletedEventHandler GetAvailableQueuesCompleted;
        
        /// <remarks/>
        public event GetUserStatisticsCompletedEventHandler GetUserStatisticsCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event GetUserRolesCompletedEventHandler GetUserRolesCompleted;
        
        /// <remarks/>
        public event SetTaskPriorityCompletedEventHandler SetTaskPriorityCompleted;
        
        /// <remarks/>
        public event SetDocumentPriorityCompletedEventHandler SetDocumentPriorityCompleted;
        
        /// <remarks/>
        public event GetCurrentUserIdentityCompletedEventHandler GetCurrentUserIdentityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#OpenSession", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("sessionId")]
        public int OpenSession(int roleType, int stationType) {
            object[] results = this.Invoke("OpenSession", new object[] {
                        roleType,
                        stationType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OpenSessionAsync(int roleType, int stationType) {
            this.OpenSessionAsync(roleType, stationType, null);
        }
        
        /// <remarks/>
        public void OpenSessionAsync(int roleType, int stationType, object userState) {
            if ((this.OpenSessionOperationCompleted == null)) {
                this.OpenSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenSessionOperationCompleted);
            }
            this.InvokeAsync("OpenSession", new object[] {
                        roleType,
                        stationType}, this.OpenSessionOperationCompleted, userState);
        }
        
        private void OnOpenSessionOperationCompleted(object arg) {
            if ((this.OpenSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenSessionCompleted(this, new OpenSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetSessionInfo", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userId")]
        public int GetSessionInfo(int sessionId, out string userName, out string computerName, out int roleType) {
            object[] results = this.Invoke("GetSessionInfo", new object[] {
                        sessionId});
            userName = ((string)(results[1]));
            computerName = ((string)(results[2]));
            roleType = ((int)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionInfoAsync(int sessionId) {
            this.GetSessionInfoAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetSessionInfoAsync(int sessionId, object userState) {
            if ((this.GetSessionInfoOperationCompleted == null)) {
                this.GetSessionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionInfoOperationCompleted);
            }
            this.InvokeAsync("GetSessionInfo", new object[] {
                        sessionId}, this.GetSessionInfoOperationCompleted, userState);
        }
        
        private void OnGetSessionInfoOperationCompleted(object arg) {
            if ((this.GetSessionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionInfoCompleted(this, new GetSessionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetProjects", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("projects", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Project[] GetProjects() {
            object[] results = this.Invoke("GetProjects", new object[0]);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsAsync() {
            this.GetProjectsAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectsAsync(object userState) {
            if ((this.GetProjectsOperationCompleted == null)) {
                this.GetProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsOperationCompleted);
            }
            this.InvokeAsync("GetProjects", new object[0], this.GetProjectsOperationCompleted, userState);
        }
        
        private void OnGetProjectsOperationCompleted(object arg) {
            if ((this.GetProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetProjectsForUser", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("projects", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Project[] GetProjectsForUser(int userId, int roleType) {
            object[] results = this.Invoke("GetProjectsForUser", new object[] {
                        userId,
                        roleType});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsForUserAsync(int userId, int roleType) {
            this.GetProjectsForUserAsync(userId, roleType, null);
        }
        
        /// <remarks/>
        public void GetProjectsForUserAsync(int userId, int roleType, object userState) {
            if ((this.GetProjectsForUserOperationCompleted == null)) {
                this.GetProjectsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsForUserOperationCompleted);
            }
            this.InvokeAsync("GetProjectsForUser", new object[] {
                        userId,
                        roleType}, this.GetProjectsForUserOperationCompleted, userState);
        }
        
        private void OnGetProjectsForUserOperationCompleted(object arg) {
            if ((this.GetProjectsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsForUserCompleted(this, new GetProjectsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetProcessingStages", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("stages", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ProcessingStage[] GetProcessingStages(int projectId, int batchTypeId, int stageType, string stageName) {
            object[] results = this.Invoke("GetProcessingStages", new object[] {
                        projectId,
                        batchTypeId,
                        stageType,
                        stageName});
            return ((ProcessingStage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessingStagesAsync(int projectId, int batchTypeId, int stageType, string stageName) {
            this.GetProcessingStagesAsync(projectId, batchTypeId, stageType, stageName, null);
        }
        
        /// <remarks/>
        public void GetProcessingStagesAsync(int projectId, int batchTypeId, int stageType, string stageName, object userState) {
            if ((this.GetProcessingStagesOperationCompleted == null)) {
                this.GetProcessingStagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessingStagesOperationCompleted);
            }
            this.InvokeAsync("GetProcessingStages", new object[] {
                        projectId,
                        batchTypeId,
                        stageType,
                        stageName}, this.GetProcessingStagesOperationCompleted, userState);
        }
        
        private void OnGetProcessingStagesOperationCompleted(object arg) {
            if ((this.GetProcessingStagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessingStagesCompleted(this, new GetProcessingStagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetTemplates", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("templates", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Template[] GetTemplates(int projectId) {
            object[] results = this.Invoke("GetTemplates", new object[] {
                        projectId});
            return ((Template[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int projectId) {
            this.GetTemplatesAsync(projectId, null);
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(int projectId, object userState) {
            if ((this.GetTemplatesOperationCompleted == null)) {
                this.GetTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetTemplates", new object[] {
                        projectId}, this.GetTemplatesOperationCompleted, userState);
        }
        
        private void OnGetTemplatesOperationCompleted(object arg) {
            if ((this.GetTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatchTypeTemplates", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("templateIds", IsNullable=true)]
        public int[] GetBatchTypeTemplates(int projectId, int batchTypeId) {
            object[] results = this.Invoke("GetBatchTypeTemplates", new object[] {
                        projectId,
                        batchTypeId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTypeTemplatesAsync(int projectId, int batchTypeId) {
            this.GetBatchTypeTemplatesAsync(projectId, batchTypeId, null);
        }
        
        /// <remarks/>
        public void GetBatchTypeTemplatesAsync(int projectId, int batchTypeId, object userState) {
            if ((this.GetBatchTypeTemplatesOperationCompleted == null)) {
                this.GetBatchTypeTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTypeTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetBatchTypeTemplates", new object[] {
                        projectId,
                        batchTypeId}, this.GetBatchTypeTemplatesOperationCompleted, userState);
        }
        
        private void OnGetBatchTypeTemplatesOperationCompleted(object arg) {
            if ((this.GetBatchTypeTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTypeTemplatesCompleted(this, new GetBatchTypeTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CloseSession", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseSession(int sessionId) {
            this.Invoke("CloseSession", new object[] {
                        sessionId});
        }
        
        /// <remarks/>
        public void CloseSessionAsync(int sessionId) {
            this.CloseSessionAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void CloseSessionAsync(int sessionId, object userState) {
            if ((this.CloseSessionOperationCompleted == null)) {
                this.CloseSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseSessionOperationCompleted);
            }
            this.InvokeAsync("CloseSession", new object[] {
                        sessionId}, this.CloseSessionOperationCompleted, userState);
        }
        
        private void OnCloseSessionOperationCompleted(object arg) {
            if ((this.CloseSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#OpenProject", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("projectId")]
        public int OpenProject(int sessionId, string projectNameOrGuid) {
            object[] results = this.Invoke("OpenProject", new object[] {
                        sessionId,
                        projectNameOrGuid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OpenProjectAsync(int sessionId, string projectNameOrGuid) {
            this.OpenProjectAsync(sessionId, projectNameOrGuid, null);
        }
        
        /// <remarks/>
        public void OpenProjectAsync(int sessionId, string projectNameOrGuid, object userState) {
            if ((this.OpenProjectOperationCompleted == null)) {
                this.OpenProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenProjectOperationCompleted);
            }
            this.InvokeAsync("OpenProject", new object[] {
                        sessionId,
                        projectNameOrGuid}, this.OpenProjectOperationCompleted, userState);
        }
        
        private void OnOpenProjectOperationCompleted(object arg) {
            if ((this.OpenProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenProjectCompleted(this, new OpenProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CloseProject", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseProject(int sessionId, int projectId) {
            this.Invoke("CloseProject", new object[] {
                        sessionId,
                        projectId});
        }
        
        /// <remarks/>
        public void CloseProjectAsync(int sessionId, int projectId) {
            this.CloseProjectAsync(sessionId, projectId, null);
        }
        
        /// <remarks/>
        public void CloseProjectAsync(int sessionId, int projectId, object userState) {
            if ((this.CloseProjectOperationCompleted == null)) {
                this.CloseProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseProjectOperationCompleted);
            }
            this.InvokeAsync("CloseProject", new object[] {
                        sessionId,
                        projectId}, this.CloseProjectOperationCompleted, userState);
        }
        
        private void OnCloseProjectOperationCompleted(object arg) {
            if ((this.CloseProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatchTypes", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("batchTypes", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public BatchType[] GetBatchTypes(int projectId) {
            object[] results = this.Invoke("GetBatchTypes", new object[] {
                        projectId});
            return ((BatchType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTypesAsync(int projectId) {
            this.GetBatchTypesAsync(projectId, null);
        }
        
        /// <remarks/>
        public void GetBatchTypesAsync(int projectId, object userState) {
            if ((this.GetBatchTypesOperationCompleted == null)) {
                this.GetBatchTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTypesOperationCompleted);
            }
            this.InvokeAsync("GetBatchTypes", new object[] {
                        projectId}, this.GetBatchTypesOperationCompleted, userState);
        }
        
        private void OnGetBatchTypesOperationCompleted(object arg) {
            if ((this.GetBatchTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTypesCompleted(this, new GetBatchTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAllowedBatchTypes", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("batchTypeIds", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public BatchTypeIdentity[] GetAllowedBatchTypes(int userId, int roleType, int projectId) {
            object[] results = this.Invoke("GetAllowedBatchTypes", new object[] {
                        userId,
                        roleType,
                        projectId});
            return ((BatchTypeIdentity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllowedBatchTypesAsync(int userId, int roleType, int projectId) {
            this.GetAllowedBatchTypesAsync(userId, roleType, projectId, null);
        }
        
        /// <remarks/>
        public void GetAllowedBatchTypesAsync(int userId, int roleType, int projectId, object userState) {
            if ((this.GetAllowedBatchTypesOperationCompleted == null)) {
                this.GetAllowedBatchTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllowedBatchTypesOperationCompleted);
            }
            this.InvokeAsync("GetAllowedBatchTypes", new object[] {
                        userId,
                        roleType,
                        projectId}, this.GetAllowedBatchTypesOperationCompleted, userState);
        }
        
        private void OnGetAllowedBatchTypesOperationCompleted(object arg) {
            if ((this.GetAllowedBatchTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllowedBatchTypesCompleted(this, new GetAllowedBatchTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddNewBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("batchId")]
        public int AddNewBatch(int sessionId, int projectId, Batch batch, int ownerId) {
            object[] results = this.Invoke("AddNewBatch", new object[] {
                        sessionId,
                        projectId,
                        batch,
                        ownerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewBatchAsync(int sessionId, int projectId, Batch batch, int ownerId) {
            this.AddNewBatchAsync(sessionId, projectId, batch, ownerId, null);
        }
        
        /// <remarks/>
        public void AddNewBatchAsync(int sessionId, int projectId, Batch batch, int ownerId, object userState) {
            if ((this.AddNewBatchOperationCompleted == null)) {
                this.AddNewBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewBatchOperationCompleted);
            }
            this.InvokeAsync("AddNewBatch", new object[] {
                        sessionId,
                        projectId,
                        batch,
                        ownerId}, this.AddNewBatchOperationCompleted, userState);
        }
        
        private void OnAddNewBatchOperationCompleted(object arg) {
            if ((this.AddNewBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewBatchCompleted(this, new AddNewBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool DeleteBatch(int sessionId, int batchId) {
            object[] results = this.Invoke("DeleteBatch", new object[] {
                        sessionId,
                        batchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBatchAsync(int sessionId, int batchId) {
            this.DeleteBatchAsync(sessionId, batchId, null);
        }
        
        /// <remarks/>
        public void DeleteBatchAsync(int sessionId, int batchId, object userState) {
            if ((this.DeleteBatchOperationCompleted == null)) {
                this.DeleteBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBatchOperationCompleted);
            }
            this.InvokeAsync("DeleteBatch", new object[] {
                        sessionId,
                        batchId}, this.DeleteBatchOperationCompleted, userState);
        }
        
        private void OnDeleteBatchOperationCompleted(object arg) {
            if ((this.DeleteBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBatchCompleted(this, new DeleteBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddNewImage", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewImage(int sessionId, int batchId, File file) {
            this.Invoke("AddNewImage", new object[] {
                        sessionId,
                        batchId,
                        file});
        }
        
        /// <remarks/>
        public void AddNewImageAsync(int sessionId, int batchId, File file) {
            this.AddNewImageAsync(sessionId, batchId, file, null);
        }
        
        /// <remarks/>
        public void AddNewImageAsync(int sessionId, int batchId, File file, object userState) {
            if ((this.AddNewImageOperationCompleted == null)) {
                this.AddNewImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewImageOperationCompleted);
            }
            this.InvokeAsync("AddNewImage", new object[] {
                        sessionId,
                        batchId,
                        file}, this.AddNewImageOperationCompleted, userState);
        }
        
        private void OnAddNewImageOperationCompleted(object arg) {
            if ((this.AddNewImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatchIdsRange", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("rangeBegin")]
        public int GetBatchIdsRange(int batchId, int idsCount, out int rangeEnd) {
            object[] results = this.Invoke("GetBatchIdsRange", new object[] {
                        batchId,
                        idsCount});
            rangeEnd = ((int)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchIdsRangeAsync(int batchId, int idsCount) {
            this.GetBatchIdsRangeAsync(batchId, idsCount, null);
        }
        
        /// <remarks/>
        public void GetBatchIdsRangeAsync(int batchId, int idsCount, object userState) {
            if ((this.GetBatchIdsRangeOperationCompleted == null)) {
                this.GetBatchIdsRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchIdsRangeOperationCompleted);
            }
            this.InvokeAsync("GetBatchIdsRange", new object[] {
                        batchId,
                        idsCount}, this.GetBatchIdsRangeOperationCompleted, userState);
        }
        
        private void OnGetBatchIdsRangeOperationCompleted(object arg) {
            if ((this.GetBatchIdsRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchIdsRangeCompleted(this, new GetBatchIdsRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddNewDocument", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("documentId")]
        public int AddNewDocument(int sessionId, Document document, File file, bool excludeFromAutomaticAssembling, int previousItemId) {
            object[] results = this.Invoke("AddNewDocument", new object[] {
                        sessionId,
                        document,
                        file,
                        excludeFromAutomaticAssembling,
                        previousItemId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewDocumentAsync(int sessionId, Document document, File file, bool excludeFromAutomaticAssembling, int previousItemId) {
            this.AddNewDocumentAsync(sessionId, document, file, excludeFromAutomaticAssembling, previousItemId, null);
        }
        
        /// <remarks/>
        public void AddNewDocumentAsync(int sessionId, Document document, File file, bool excludeFromAutomaticAssembling, int previousItemId, object userState) {
            if ((this.AddNewDocumentOperationCompleted == null)) {
                this.AddNewDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewDocumentOperationCompleted);
            }
            this.InvokeAsync("AddNewDocument", new object[] {
                        sessionId,
                        document,
                        file,
                        excludeFromAutomaticAssembling,
                        previousItemId}, this.AddNewDocumentOperationCompleted, userState);
        }
        
        private void OnAddNewDocumentOperationCompleted(object arg) {
            if ((this.AddNewDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewDocumentCompleted(this, new AddNewDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddNewPage", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("pageId")]
        public int AddNewPage(int sessionId, int batchId, int documentId, int previousItemId, Page page, File file) {
            object[] results = this.Invoke("AddNewPage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        previousItemId,
                        page,
                        file});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewPageAsync(int sessionId, int batchId, int documentId, int previousItemId, Page page, File file) {
            this.AddNewPageAsync(sessionId, batchId, documentId, previousItemId, page, file, null);
        }
        
        /// <remarks/>
        public void AddNewPageAsync(int sessionId, int batchId, int documentId, int previousItemId, Page page, File file, object userState) {
            if ((this.AddNewPageOperationCompleted == null)) {
                this.AddNewPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewPageOperationCompleted);
            }
            this.InvokeAsync("AddNewPage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        previousItemId,
                        page,
                        file}, this.AddNewPageOperationCompleted, userState);
        }
        
        private void OnAddNewPageOperationCompleted(object arg) {
            if ((this.AddNewPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewPageCompleted(this, new AddNewPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#MoveBatchItem", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveBatchItem(int sessionId, int batchId, int itemId, int newParentId, int previousItemId) {
            this.Invoke("MoveBatchItem", new object[] {
                        sessionId,
                        batchId,
                        itemId,
                        newParentId,
                        previousItemId});
        }
        
        /// <remarks/>
        public void MoveBatchItemAsync(int sessionId, int batchId, int itemId, int newParentId, int previousItemId) {
            this.MoveBatchItemAsync(sessionId, batchId, itemId, newParentId, previousItemId, null);
        }
        
        /// <remarks/>
        public void MoveBatchItemAsync(int sessionId, int batchId, int itemId, int newParentId, int previousItemId, object userState) {
            if ((this.MoveBatchItemOperationCompleted == null)) {
                this.MoveBatchItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveBatchItemOperationCompleted);
            }
            this.InvokeAsync("MoveBatchItem", new object[] {
                        sessionId,
                        batchId,
                        itemId,
                        newParentId,
                        previousItemId}, this.MoveBatchItemOperationCompleted, userState);
        }
        
        private void OnMoveBatchItemOperationCompleted(object arg) {
            if ((this.MoveBatchItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveBatchItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ProcessBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessBatch(int sessionId, int batchId) {
            this.Invoke("ProcessBatch", new object[] {
                        sessionId,
                        batchId});
        }
        
        /// <remarks/>
        public void ProcessBatchAsync(int sessionId, int batchId) {
            this.ProcessBatchAsync(sessionId, batchId, null);
        }
        
        /// <remarks/>
        public void ProcessBatchAsync(int sessionId, int batchId, object userState) {
            if ((this.ProcessBatchOperationCompleted == null)) {
                this.ProcessBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessBatchOperationCompleted);
            }
            this.InvokeAsync("ProcessBatch", new object[] {
                        sessionId,
                        batchId}, this.ProcessBatchOperationCompleted, userState);
        }
        
        private void OnProcessBatchOperationCompleted(object arg) {
            if ((this.ProcessBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatchPercentCompleted", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public int GetBatchPercentCompleted(int batchId) {
            object[] results = this.Invoke("GetBatchPercentCompleted", new object[] {
                        batchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchPercentCompletedAsync(int batchId) {
            this.GetBatchPercentCompletedAsync(batchId, null);
        }
        
        /// <remarks/>
        public void GetBatchPercentCompletedAsync(int batchId, object userState) {
            if ((this.GetBatchPercentCompletedOperationCompleted == null)) {
                this.GetBatchPercentCompletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchPercentCompletedOperationCompleted);
            }
            this.InvokeAsync("GetBatchPercentCompleted", new object[] {
                        batchId}, this.GetBatchPercentCompletedOperationCompleted, userState);
        }
        
        private void OnGetBatchPercentCompletedOperationCompleted(object arg) {
            if ((this.GetBatchPercentCompletedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchPercentCompletedCompleted(this, new GetBatchPercentCompletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetDocuments", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("documents", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Document[] GetDocuments(int sessionId, int batchId) {
            object[] results = this.Invoke("GetDocuments", new object[] {
                        sessionId,
                        batchId});
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(int sessionId, int batchId) {
            this.GetDocumentsAsync(sessionId, batchId, null);
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(int sessionId, int batchId, object userState) {
            if ((this.GetDocumentsOperationCompleted == null)) {
                this.GetDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetDocuments", new object[] {
                        sessionId,
                        batchId}, this.GetDocumentsOperationCompleted, userState);
        }
        
        private void OnGetDocumentsOperationCompleted(object arg) {
            if ((this.GetDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsCompleted(this, new GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetDocumentResultsList", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("fileNames", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] GetDocumentResultsList(int sessionId, int batchId, int documentId) {
            object[] results = this.Invoke("GetDocumentResultsList", new object[] {
                        sessionId,
                        batchId,
                        documentId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentResultsListAsync(int sessionId, int batchId, int documentId) {
            this.GetDocumentResultsListAsync(sessionId, batchId, documentId, null);
        }
        
        /// <remarks/>
        public void GetDocumentResultsListAsync(int sessionId, int batchId, int documentId, object userState) {
            if ((this.GetDocumentResultsListOperationCompleted == null)) {
                this.GetDocumentResultsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentResultsListOperationCompleted);
            }
            this.InvokeAsync("GetDocumentResultsList", new object[] {
                        sessionId,
                        batchId,
                        documentId}, this.GetDocumentResultsListOperationCompleted, userState);
        }
        
        private void OnGetDocumentResultsListOperationCompleted(object arg) {
            if ((this.GetDocumentResultsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentResultsListCompleted(this, new GetDocumentResultsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#LoadDocumentResult", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("file")]
        public File LoadDocumentResult(int sessionId, int batchId, int documentId, string fileName) {
            object[] results = this.Invoke("LoadDocumentResult", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        fileName});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void LoadDocumentResultAsync(int sessionId, int batchId, int documentId, string fileName) {
            this.LoadDocumentResultAsync(sessionId, batchId, documentId, fileName, null);
        }
        
        /// <remarks/>
        public void LoadDocumentResultAsync(int sessionId, int batchId, int documentId, string fileName, object userState) {
            if ((this.LoadDocumentResultOperationCompleted == null)) {
                this.LoadDocumentResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadDocumentResultOperationCompleted);
            }
            this.InvokeAsync("LoadDocumentResult", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        fileName}, this.LoadDocumentResultOperationCompleted, userState);
        }
        
        private void OnLoadDocumentResultOperationCompleted(object arg) {
            if ((this.LoadDocumentResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadDocumentResultCompleted(this, new LoadDocumentResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#IsSessionExists", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool IsSessionExists(int sessionId) {
            object[] results = this.Invoke("IsSessionExists", new object[] {
                        sessionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSessionExistsAsync(int sessionId) {
            this.IsSessionExistsAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void IsSessionExistsAsync(int sessionId, object userState) {
            if ((this.IsSessionExistsOperationCompleted == null)) {
                this.IsSessionExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSessionExistsOperationCompleted);
            }
            this.InvokeAsync("IsSessionExists", new object[] {
                        sessionId}, this.IsSessionExistsOperationCompleted, userState);
        }
        
        private void OnIsSessionExistsOperationCompleted(object arg) {
            if ((this.IsSessionExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSessionExistsCompleted(this, new IsSessionExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatchType", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("batchType")]
        public BatchType GetBatchType(int batchTypeId) {
            object[] results = this.Invoke("GetBatchType", new object[] {
                        batchTypeId});
            return ((BatchType)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchTypeAsync(int batchTypeId) {
            this.GetBatchTypeAsync(batchTypeId, null);
        }
        
        /// <remarks/>
        public void GetBatchTypeAsync(int batchTypeId, object userState) {
            if ((this.GetBatchTypeOperationCompleted == null)) {
                this.GetBatchTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchTypeOperationCompleted);
            }
            this.InvokeAsync("GetBatchType", new object[] {
                        batchTypeId}, this.GetBatchTypeOperationCompleted, userState);
        }
        
        private void OnGetBatchTypeOperationCompleted(object arg) {
            if ((this.GetBatchTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchTypeCompleted(this, new GetBatchTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatches", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("batches", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Batch[] GetBatches(int projectId, int sessionId, bool onlyPrivateBatches) {
            object[] results = this.Invoke("GetBatches", new object[] {
                        projectId,
                        sessionId,
                        onlyPrivateBatches});
            return ((Batch[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchesAsync(int projectId, int sessionId, bool onlyPrivateBatches) {
            this.GetBatchesAsync(projectId, sessionId, onlyPrivateBatches, null);
        }
        
        /// <remarks/>
        public void GetBatchesAsync(int projectId, int sessionId, bool onlyPrivateBatches, object userState) {
            if ((this.GetBatchesOperationCompleted == null)) {
                this.GetBatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchesOperationCompleted);
            }
            this.InvokeAsync("GetBatches", new object[] {
                        projectId,
                        sessionId,
                        onlyPrivateBatches}, this.GetBatchesOperationCompleted, userState);
        }
        
        private void OnGetBatchesOperationCompleted(object arg) {
            if ((this.GetBatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchesCompleted(this, new GetBatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("batch")]
        public Batch GetBatch(int batchId) {
            object[] results = this.Invoke("GetBatch", new object[] {
                        batchId});
            return ((Batch)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchAsync(int batchId) {
            this.GetBatchAsync(batchId, null);
        }
        
        /// <remarks/>
        public void GetBatchAsync(int batchId, object userState) {
            if ((this.GetBatchOperationCompleted == null)) {
                this.GetBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchOperationCompleted);
            }
            this.InvokeAsync("GetBatch", new object[] {
                        batchId}, this.GetBatchOperationCompleted, userState);
        }
        
        private void OnGetBatchOperationCompleted(object arg) {
            if ((this.GetBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchCompleted(this, new GetBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBatch(int sessionId, Batch batch) {
            this.Invoke("UpdateBatch", new object[] {
                        sessionId,
                        batch});
        }
        
        /// <remarks/>
        public void UpdateBatchAsync(int sessionId, Batch batch) {
            this.UpdateBatchAsync(sessionId, batch, null);
        }
        
        /// <remarks/>
        public void UpdateBatchAsync(int sessionId, Batch batch, object userState) {
            if ((this.UpdateBatchOperationCompleted == null)) {
                this.UpdateBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBatchOperationCompleted);
            }
            this.InvokeAsync("UpdateBatch", new object[] {
                        sessionId,
                        batch}, this.UpdateBatchOperationCompleted, userState);
        }
        
        private void OnUpdateBatchOperationCompleted(object arg) {
            if ((this.UpdateBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#OpenBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool OpenBatch(int sessionId, int batchId) {
            object[] results = this.Invoke("OpenBatch", new object[] {
                        sessionId,
                        batchId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OpenBatchAsync(int sessionId, int batchId) {
            this.OpenBatchAsync(sessionId, batchId, null);
        }
        
        /// <remarks/>
        public void OpenBatchAsync(int sessionId, int batchId, object userState) {
            if ((this.OpenBatchOperationCompleted == null)) {
                this.OpenBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenBatchOperationCompleted);
            }
            this.InvokeAsync("OpenBatch", new object[] {
                        sessionId,
                        batchId}, this.OpenBatchOperationCompleted, userState);
        }
        
        private void OnOpenBatchOperationCompleted(object arg) {
            if ((this.OpenBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenBatchCompleted(this, new OpenBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CloseBatch", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseBatch(int sessionId, int batchId) {
            this.Invoke("CloseBatch", new object[] {
                        sessionId,
                        batchId});
        }
        
        /// <remarks/>
        public void CloseBatchAsync(int sessionId, int batchId) {
            this.CloseBatchAsync(sessionId, batchId, null);
        }
        
        /// <remarks/>
        public void CloseBatchAsync(int sessionId, int batchId, object userState) {
            if ((this.CloseBatchOperationCompleted == null)) {
                this.CloseBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseBatchOperationCompleted);
            }
            this.InvokeAsync("CloseBatch", new object[] {
                        sessionId,
                        batchId}, this.CloseBatchOperationCompleted, userState);
        }
        
        private void OnCloseBatchOperationCompleted(object arg) {
            if ((this.CloseBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetDocument", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("document")]
        public Document GetDocument(int sessionId, int batchId, int documentId) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        sessionId,
                        batchId,
                        documentId});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(int sessionId, int batchId, int documentId) {
            this.GetDocumentAsync(sessionId, batchId, documentId, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(int sessionId, int batchId, int documentId, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        sessionId,
                        batchId,
                        documentId}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeletePage", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool DeletePage(int sessionId, int batchId, int documentId, int pageId) {
            object[] results = this.Invoke("DeletePage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        pageId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePageAsync(int sessionId, int batchId, int documentId, int pageId) {
            this.DeletePageAsync(sessionId, batchId, documentId, pageId, null);
        }
        
        /// <remarks/>
        public void DeletePageAsync(int sessionId, int batchId, int documentId, int pageId, object userState) {
            if ((this.DeletePageOperationCompleted == null)) {
                this.DeletePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePageOperationCompleted);
            }
            this.InvokeAsync("DeletePage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        pageId}, this.DeletePageOperationCompleted, userState);
        }
        
        private void OnDeletePageOperationCompleted(object arg) {
            if ((this.DeletePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePageCompleted(this, new DeletePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteDocument", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool DeleteDocument(int sessionId, int batchId, int documentId) {
            object[] results = this.Invoke("DeleteDocument", new object[] {
                        sessionId,
                        batchId,
                        documentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(int sessionId, int batchId, int documentId) {
            this.DeleteDocumentAsync(sessionId, batchId, documentId, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(int sessionId, int batchId, int documentId, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        sessionId,
                        batchId,
                        documentId}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new DeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ReplacePageImage", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReplacePageImage(int sessionId, int batchId, int documentId, int pageId, File file) {
            this.Invoke("ReplacePageImage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        pageId,
                        file});
        }
        
        /// <remarks/>
        public void ReplacePageImageAsync(int sessionId, int batchId, int documentId, int pageId, File file) {
            this.ReplacePageImageAsync(sessionId, batchId, documentId, pageId, file, null);
        }
        
        /// <remarks/>
        public void ReplacePageImageAsync(int sessionId, int batchId, int documentId, int pageId, File file, object userState) {
            if ((this.ReplacePageImageOperationCompleted == null)) {
                this.ReplacePageImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePageImageOperationCompleted);
            }
            this.InvokeAsync("ReplacePageImage", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        pageId,
                        file}, this.ReplacePageImageOperationCompleted, userState);
        }
        
        private void OnReplacePageImageOperationCompleted(object arg) {
            if ((this.ReplacePageImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePageImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetDocumentProperties", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDocumentProperties(int sessionId, int batchId, int documentId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] RegistrationProperty[] properties) {
            this.Invoke("SetDocumentProperties", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        properties});
        }
        
        /// <remarks/>
        public void SetDocumentPropertiesAsync(int sessionId, int batchId, int documentId, RegistrationProperty[] properties) {
            this.SetDocumentPropertiesAsync(sessionId, batchId, documentId, properties, null);
        }
        
        /// <remarks/>
        public void SetDocumentPropertiesAsync(int sessionId, int batchId, int documentId, RegistrationProperty[] properties, object userState) {
            if ((this.SetDocumentPropertiesOperationCompleted == null)) {
                this.SetDocumentPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDocumentPropertiesOperationCompleted);
            }
            this.InvokeAsync("SetDocumentProperties", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        properties}, this.SetDocumentPropertiesOperationCompleted, userState);
        }
        
        private void OnSetDocumentPropertiesOperationCompleted(object arg) {
            if ((this.SetDocumentPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDocumentPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#LoadCustomFile", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("file")]
        public File LoadCustomFile(string fileName) {
            object[] results = this.Invoke("LoadCustomFile", new object[] {
                        fileName});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCustomFileAsync(string fileName) {
            this.LoadCustomFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void LoadCustomFileAsync(string fileName, object userState) {
            if ((this.LoadCustomFileOperationCompleted == null)) {
                this.LoadCustomFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCustomFileOperationCompleted);
            }
            this.InvokeAsync("LoadCustomFile", new object[] {
                        fileName}, this.LoadCustomFileOperationCompleted, userState);
        }
        
        private void OnLoadCustomFileOperationCompleted(object arg) {
            if ((this.LoadCustomFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCustomFileCompleted(this, new LoadCustomFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SaveCustomFile", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveCustomFile(int sessionId, File file) {
            this.Invoke("SaveCustomFile", new object[] {
                        sessionId,
                        file});
        }
        
        /// <remarks/>
        public void SaveCustomFileAsync(int sessionId, File file) {
            this.SaveCustomFileAsync(sessionId, file, null);
        }
        
        /// <remarks/>
        public void SaveCustomFileAsync(int sessionId, File file, object userState) {
            if ((this.SaveCustomFileOperationCompleted == null)) {
                this.SaveCustomFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCustomFileOperationCompleted);
            }
            this.InvokeAsync("SaveCustomFile", new object[] {
                        sessionId,
                        file}, this.SaveCustomFileOperationCompleted, userState);
        }
        
        private void OnSaveCustomFileOperationCompleted(object arg) {
            if ((this.SaveCustomFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCustomFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RemoveCustomFile", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveCustomFile(int sessionId, string fileName) {
            this.Invoke("RemoveCustomFile", new object[] {
                        sessionId,
                        fileName});
        }
        
        /// <remarks/>
        public void RemoveCustomFileAsync(int sessionId, string fileName) {
            this.RemoveCustomFileAsync(sessionId, fileName, null);
        }
        
        /// <remarks/>
        public void RemoveCustomFileAsync(int sessionId, string fileName, object userState) {
            if ((this.RemoveCustomFileOperationCompleted == null)) {
                this.RemoveCustomFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCustomFileOperationCompleted);
            }
            this.InvokeAsync("RemoveCustomFile", new object[] {
                        sessionId,
                        fileName}, this.RemoveCustomFileOperationCompleted, userState);
        }
        
        private void OnRemoveCustomFileOperationCompleted(object arg) {
            if ((this.RemoveCustomFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCustomFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetCustomFileNames", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("fileNames", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] GetCustomFileNames() {
            object[] results = this.Invoke("GetCustomFileNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomFileNamesAsync() {
            this.GetCustomFileNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomFileNamesAsync(object userState) {
            if ((this.GetCustomFileNamesOperationCompleted == null)) {
                this.GetCustomFileNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomFileNamesOperationCompleted);
            }
            this.InvokeAsync("GetCustomFileNames", new object[0], this.GetCustomFileNamesOperationCompleted, userState);
        }
        
        private void OnGetCustomFileNamesOperationCompleted(object arg) {
            if ((this.GetCustomFileNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomFileNamesCompleted(this, new GetCustomFileNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#LoadAttachment", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("file")]
        public File LoadAttachment(int sessionId, int type, int objectId, int batchId, int projectId, string fileName) {
            object[] results = this.Invoke("LoadAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        fileName});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, string fileName) {
            this.LoadAttachmentAsync(sessionId, type, objectId, batchId, projectId, fileName, null);
        }
        
        /// <remarks/>
        public void LoadAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, string fileName, object userState) {
            if ((this.LoadAttachmentOperationCompleted == null)) {
                this.LoadAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAttachmentOperationCompleted);
            }
            this.InvokeAsync("LoadAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        fileName}, this.LoadAttachmentOperationCompleted, userState);
        }
        
        private void OnLoadAttachmentOperationCompleted(object arg) {
            if ((this.LoadAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAttachmentCompleted(this, new LoadAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SaveAttachment", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveAttachment(int sessionId, int type, int objectId, int batchId, int projectId, File file) {
            this.Invoke("SaveAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        file});
        }
        
        /// <remarks/>
        public void SaveAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, File file) {
            this.SaveAttachmentAsync(sessionId, type, objectId, batchId, projectId, file, null);
        }
        
        /// <remarks/>
        public void SaveAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, File file, object userState) {
            if ((this.SaveAttachmentOperationCompleted == null)) {
                this.SaveAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveAttachmentOperationCompleted);
            }
            this.InvokeAsync("SaveAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        file}, this.SaveAttachmentOperationCompleted, userState);
        }
        
        private void OnSaveAttachmentOperationCompleted(object arg) {
            if ((this.SaveAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RemoveAttachment", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAttachment(int sessionId, int type, int objectId, int batchId, int projectId, string fileName) {
            this.Invoke("RemoveAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        fileName});
        }
        
        /// <remarks/>
        public void RemoveAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, string fileName) {
            this.RemoveAttachmentAsync(sessionId, type, objectId, batchId, projectId, fileName, null);
        }
        
        /// <remarks/>
        public void RemoveAttachmentAsync(int sessionId, int type, int objectId, int batchId, int projectId, string fileName, object userState) {
            if ((this.RemoveAttachmentOperationCompleted == null)) {
                this.RemoveAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAttachmentOperationCompleted);
            }
            this.InvokeAsync("RemoveAttachment", new object[] {
                        sessionId,
                        type,
                        objectId,
                        batchId,
                        projectId,
                        fileName}, this.RemoveAttachmentOperationCompleted, userState);
        }
        
        private void OnRemoveAttachmentOperationCompleted(object arg) {
            if ((this.RemoveAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAttachmentNames", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("fileNames", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public string[] GetAttachmentNames(int type, int objectId, int batchId, int projectId) {
            object[] results = this.Invoke("GetAttachmentNames", new object[] {
                        type,
                        objectId,
                        batchId,
                        projectId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentNamesAsync(int type, int objectId, int batchId, int projectId) {
            this.GetAttachmentNamesAsync(type, objectId, batchId, projectId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentNamesAsync(int type, int objectId, int batchId, int projectId, object userState) {
            if ((this.GetAttachmentNamesOperationCompleted == null)) {
                this.GetAttachmentNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentNamesOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentNames", new object[] {
                        type,
                        objectId,
                        batchId,
                        projectId}, this.GetAttachmentNamesOperationCompleted, userState);
        }
        
        private void OnGetAttachmentNamesOperationCompleted(object arg) {
            if ((this.GetAttachmentNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentNamesCompleted(this, new GetAttachmentNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#WriteToLog", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WriteToLog(long clientTime, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] LogRecord[] records) {
            this.Invoke("WriteToLog", new object[] {
                        clientTime,
                        records});
        }
        
        /// <remarks/>
        public void WriteToLogAsync(long clientTime, LogRecord[] records) {
            this.WriteToLogAsync(clientTime, records, null);
        }
        
        /// <remarks/>
        public void WriteToLogAsync(long clientTime, LogRecord[] records, object userState) {
            if ((this.WriteToLogOperationCompleted == null)) {
                this.WriteToLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteToLogOperationCompleted);
            }
            this.InvokeAsync("WriteToLog", new object[] {
                        clientTime,
                        records}, this.WriteToLogOperationCompleted, userState);
        }
        
        private void OnWriteToLogOperationCompleted(object arg) {
            if ((this.WriteToLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteToLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAvailableTasks", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("tasks")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Task[] GetAvailableTasks(int sessionId, int projectId, int processingStage, bool onlyPrivateBatches) {
            object[] results = this.Invoke("GetAvailableTasks", new object[] {
                        sessionId,
                        projectId,
                        processingStage,
                        onlyPrivateBatches});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTasksAsync(int sessionId, int projectId, int processingStage, bool onlyPrivateBatches) {
            this.GetAvailableTasksAsync(sessionId, projectId, processingStage, onlyPrivateBatches, null);
        }
        
        /// <remarks/>
        public void GetAvailableTasksAsync(int sessionId, int projectId, int processingStage, bool onlyPrivateBatches, object userState) {
            if ((this.GetAvailableTasksOperationCompleted == null)) {
                this.GetAvailableTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTasksOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTasks", new object[] {
                        sessionId,
                        projectId,
                        processingStage,
                        onlyPrivateBatches}, this.GetAvailableTasksOperationCompleted, userState);
        }
        
        private void OnGetAvailableTasksOperationCompleted(object arg) {
            if ((this.GetAvailableTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTasksCompleted(this, new GetAvailableTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAvailableTasksByStageId", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("tasks")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Task[] GetAvailableTasksByStageId(int sessionId, int projectId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("stageId", IsNullable=false)] int[] stageIds, bool onlyPrivateBatches) {
            object[] results = this.Invoke("GetAvailableTasksByStageId", new object[] {
                        sessionId,
                        projectId,
                        stageIds,
                        onlyPrivateBatches});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableTasksByStageIdAsync(int sessionId, int projectId, int[] stageIds, bool onlyPrivateBatches) {
            this.GetAvailableTasksByStageIdAsync(sessionId, projectId, stageIds, onlyPrivateBatches, null);
        }
        
        /// <remarks/>
        public void GetAvailableTasksByStageIdAsync(int sessionId, int projectId, int[] stageIds, bool onlyPrivateBatches, object userState) {
            if ((this.GetAvailableTasksByStageIdOperationCompleted == null)) {
                this.GetAvailableTasksByStageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableTasksByStageIdOperationCompleted);
            }
            this.InvokeAsync("GetAvailableTasksByStageId", new object[] {
                        sessionId,
                        projectId,
                        stageIds,
                        onlyPrivateBatches}, this.GetAvailableTasksByStageIdOperationCompleted, userState);
        }
        
        private void OnGetAvailableTasksByStageIdOperationCompleted(object arg) {
            if ((this.GetAvailableTasksByStageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableTasksByStageIdCompleted(this, new GetAvailableTasksByStageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetTaskInfo", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("task")]
        public Task GetTaskInfo(int taskId) {
            object[] results = this.Invoke("GetTaskInfo", new object[] {
                        taskId});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(int taskId) {
            this.GetTaskInfoAsync(taskId, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(int taskId, object userState) {
            if ((this.GetTaskInfoOperationCompleted == null)) {
                this.GetTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfo", new object[] {
                        taskId}, this.GetTaskInfoOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoOperationCompleted(object arg) {
            if ((this.GetTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CreateTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("taskId")]
        public int CreateTask(int sessionId, int batchId, int stageExternalId, int priority, string comment, int userId, [System.Xml.Serialization.XmlArrayItemAttribute("DocId", IsNullable=false)] int[] docIds, bool setAsCurrentTask) {
            object[] results = this.Invoke("CreateTask", new object[] {
                        sessionId,
                        batchId,
                        stageExternalId,
                        priority,
                        comment,
                        userId,
                        docIds,
                        setAsCurrentTask});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTaskAsync(int sessionId, int batchId, int stageExternalId, int priority, string comment, int userId, int[] docIds, bool setAsCurrentTask) {
            this.CreateTaskAsync(sessionId, batchId, stageExternalId, priority, comment, userId, docIds, setAsCurrentTask, null);
        }
        
        /// <remarks/>
        public void CreateTaskAsync(int sessionId, int batchId, int stageExternalId, int priority, string comment, int userId, int[] docIds, bool setAsCurrentTask, object userState) {
            if ((this.CreateTaskOperationCompleted == null)) {
                this.CreateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTaskOperationCompleted);
            }
            this.InvokeAsync("CreateTask", new object[] {
                        sessionId,
                        batchId,
                        stageExternalId,
                        priority,
                        comment,
                        userId,
                        docIds,
                        setAsCurrentTask}, this.CreateTaskOperationCompleted, userState);
        }
        
        private void OnCreateTaskOperationCompleted(object arg) {
            if ((this.CreateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTaskCompleted(this, new CreateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#OpenTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool OpenTask(int sessionId, int taskId) {
            object[] results = this.Invoke("OpenTask", new object[] {
                        sessionId,
                        taskId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OpenTaskAsync(int sessionId, int taskId) {
            this.OpenTaskAsync(sessionId, taskId, null);
        }
        
        /// <remarks/>
        public void OpenTaskAsync(int sessionId, int taskId, object userState) {
            if ((this.OpenTaskOperationCompleted == null)) {
                this.OpenTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenTaskOperationCompleted);
            }
            this.InvokeAsync("OpenTask", new object[] {
                        sessionId,
                        taskId}, this.OpenTaskOperationCompleted, userState);
        }
        
        private void OnOpenTaskOperationCompleted(object arg) {
            if ((this.OpenTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenTaskCompleted(this, new OpenTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("taskId")]
        public int GetTask(int sessionId, int projectId, int stageType, bool onlyPreprocessedTasks, bool onlyPrivateBatches) {
            object[] results = this.Invoke("GetTask", new object[] {
                        sessionId,
                        projectId,
                        stageType,
                        onlyPreprocessedTasks,
                        onlyPrivateBatches});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(int sessionId, int projectId, int stageType, bool onlyPreprocessedTasks, bool onlyPrivateBatches) {
            this.GetTaskAsync(sessionId, projectId, stageType, onlyPreprocessedTasks, onlyPrivateBatches, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(int sessionId, int projectId, int stageType, bool onlyPreprocessedTasks, bool onlyPrivateBatches, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        sessionId,
                        projectId,
                        stageType,
                        onlyPreprocessedTasks,
                        onlyPrivateBatches}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetTaskByStageId", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("taskId")]
        public int GetTaskByStageId(int sessionId, int projectId, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("stageId", IsNullable=false)] int[] stageIds, bool onlyPreprocessedTasks, bool onlyPrivateBatches) {
            object[] results = this.Invoke("GetTaskByStageId", new object[] {
                        sessionId,
                        projectId,
                        stageIds,
                        onlyPreprocessedTasks,
                        onlyPrivateBatches});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskByStageIdAsync(int sessionId, int projectId, int[] stageIds, bool onlyPreprocessedTasks, bool onlyPrivateBatches) {
            this.GetTaskByStageIdAsync(sessionId, projectId, stageIds, onlyPreprocessedTasks, onlyPrivateBatches, null);
        }
        
        /// <remarks/>
        public void GetTaskByStageIdAsync(int sessionId, int projectId, int[] stageIds, bool onlyPreprocessedTasks, bool onlyPrivateBatches, object userState) {
            if ((this.GetTaskByStageIdOperationCompleted == null)) {
                this.GetTaskByStageIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskByStageIdOperationCompleted);
            }
            this.InvokeAsync("GetTaskByStageId", new object[] {
                        sessionId,
                        projectId,
                        stageIds,
                        onlyPreprocessedTasks,
                        onlyPrivateBatches}, this.GetTaskByStageIdOperationCompleted, userState);
        }
        
        private void OnGetTaskByStageIdOperationCompleted(object arg) {
            if ((this.GetTaskByStageIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskByStageIdCompleted(this, new GetTaskByStageIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetCurrentTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("taskId")]
        public int GetCurrentTask(int sessionId) {
            object[] results = this.Invoke("GetCurrentTask", new object[] {
                        sessionId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentTaskAsync(int sessionId) {
            this.GetCurrentTaskAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetCurrentTaskAsync(int sessionId, object userState) {
            if ((this.GetCurrentTaskOperationCompleted == null)) {
                this.GetCurrentTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentTaskOperationCompleted);
            }
            this.InvokeAsync("GetCurrentTask", new object[] {
                        sessionId}, this.GetCurrentTaskOperationCompleted, userState);
        }
        
        private void OnGetCurrentTaskOperationCompleted(object arg) {
            if ((this.GetCurrentTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentTaskCompleted(this, new GetCurrentTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetTaskDocuments", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("documents")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Document[] GetTaskDocuments(int taskId) {
            object[] results = this.Invoke("GetTaskDocuments", new object[] {
                        taskId});
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskDocumentsAsync(int taskId) {
            this.GetTaskDocumentsAsync(taskId, null);
        }
        
        /// <remarks/>
        public void GetTaskDocumentsAsync(int taskId, object userState) {
            if ((this.GetTaskDocumentsOperationCompleted == null)) {
                this.GetTaskDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetTaskDocuments", new object[] {
                        taskId}, this.GetTaskDocumentsOperationCompleted, userState);
        }
        
        private void OnGetTaskDocumentsOperationCompleted(object arg) {
            if ((this.GetTaskDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskDocumentsCompleted(this, new GetTaskDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CloseTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseTask(int sessionId, int taskId, int stageType) {
            this.Invoke("CloseTask", new object[] {
                        sessionId,
                        taskId,
                        stageType});
        }
        
        /// <remarks/>
        public void CloseTaskAsync(int sessionId, int taskId, int stageType) {
            this.CloseTaskAsync(sessionId, taskId, stageType, null);
        }
        
        /// <remarks/>
        public void CloseTaskAsync(int sessionId, int taskId, int stageType, object userState) {
            if ((this.CloseTaskOperationCompleted == null)) {
                this.CloseTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTaskOperationCompleted);
            }
            this.InvokeAsync("CloseTask", new object[] {
                        sessionId,
                        taskId,
                        stageType}, this.CloseTaskOperationCompleted, userState);
        }
        
        private void OnCloseTaskOperationCompleted(object arg) {
            if ((this.CloseTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CancelTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelTask(int sessionId, int taskId) {
            this.Invoke("CancelTask", new object[] {
                        sessionId,
                        taskId});
        }
        
        /// <remarks/>
        public void CancelTaskAsync(int sessionId, int taskId) {
            this.CancelTaskAsync(sessionId, taskId, null);
        }
        
        /// <remarks/>
        public void CancelTaskAsync(int sessionId, int taskId, object userState) {
            if ((this.CancelTaskOperationCompleted == null)) {
                this.CancelTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTaskOperationCompleted);
            }
            this.InvokeAsync("CancelTask", new object[] {
                        sessionId,
                        taskId}, this.CancelTaskOperationCompleted, userState);
        }
        
        private void OnCancelTaskOperationCompleted(object arg) {
            if ((this.CancelTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#PostponeTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PostponeTask(int sessionId, int taskId, string comment) {
            this.Invoke("PostponeTask", new object[] {
                        sessionId,
                        taskId,
                        comment});
        }
        
        /// <remarks/>
        public void PostponeTaskAsync(int sessionId, int taskId, string comment) {
            this.PostponeTaskAsync(sessionId, taskId, comment, null);
        }
        
        /// <remarks/>
        public void PostponeTaskAsync(int sessionId, int taskId, string comment, object userState) {
            if ((this.PostponeTaskOperationCompleted == null)) {
                this.PostponeTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostponeTaskOperationCompleted);
            }
            this.InvokeAsync("PostponeTask", new object[] {
                        sessionId,
                        taskId,
                        comment}, this.PostponeTaskOperationCompleted, userState);
        }
        
        private void OnPostponeTaskOperationCompleted(object arg) {
            if ((this.PostponeTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostponeTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetPostponedTasks", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("tasks")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Task[] GetPostponedTasks(int sessionId, int projectId, int processingStage) {
            object[] results = this.Invoke("GetPostponedTasks", new object[] {
                        sessionId,
                        projectId,
                        processingStage});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostponedTasksAsync(int sessionId, int projectId, int processingStage) {
            this.GetPostponedTasksAsync(sessionId, projectId, processingStage, null);
        }
        
        /// <remarks/>
        public void GetPostponedTasksAsync(int sessionId, int projectId, int processingStage, object userState) {
            if ((this.GetPostponedTasksOperationCompleted == null)) {
                this.GetPostponedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostponedTasksOperationCompleted);
            }
            this.InvokeAsync("GetPostponedTasks", new object[] {
                        sessionId,
                        projectId,
                        processingStage}, this.GetPostponedTasksOperationCompleted, userState);
        }
        
        private void OnGetPostponedTasksOperationCompleted(object arg) {
            if ((this.GetPostponedTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostponedTasksCompleted(this, new GetPostponedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SendTaskToException", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendTaskToException(int sessionId, int taskId, string comment, bool needPostprocessing) {
            this.Invoke("SendTaskToException", new object[] {
                        sessionId,
                        taskId,
                        comment,
                        needPostprocessing});
        }
        
        /// <remarks/>
        public void SendTaskToExceptionAsync(int sessionId, int taskId, string comment, bool needPostprocessing) {
            this.SendTaskToExceptionAsync(sessionId, taskId, comment, needPostprocessing, null);
        }
        
        /// <remarks/>
        public void SendTaskToExceptionAsync(int sessionId, int taskId, string comment, bool needPostprocessing, object userState) {
            if ((this.SendTaskToExceptionOperationCompleted == null)) {
                this.SendTaskToExceptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTaskToExceptionOperationCompleted);
            }
            this.InvokeAsync("SendTaskToException", new object[] {
                        sessionId,
                        taskId,
                        comment,
                        needPostprocessing}, this.SendTaskToExceptionOperationCompleted, userState);
        }
        
        private void OnSendTaskToExceptionOperationCompleted(object arg) {
            if ((this.SendTaskToExceptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTaskToExceptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SendTask", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendTask(int sessionId, int taskId, int stageId, string comment) {
            this.Invoke("SendTask", new object[] {
                        sessionId,
                        taskId,
                        stageId,
                        comment});
        }
        
        /// <remarks/>
        public void SendTaskAsync(int sessionId, int taskId, int stageId, string comment) {
            this.SendTaskAsync(sessionId, taskId, stageId, comment, null);
        }
        
        /// <remarks/>
        public void SendTaskAsync(int sessionId, int taskId, int stageId, string comment, object userState) {
            if ((this.SendTaskOperationCompleted == null)) {
                this.SendTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTaskOperationCompleted);
            }
            this.InvokeAsync("SendTask", new object[] {
                        sessionId,
                        taskId,
                        stageId,
                        comment}, this.SendTaskOperationCompleted, userState);
        }
        
        private void OnSendTaskOperationCompleted(object arg) {
            if ((this.SendTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetNewTicket", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool GetNewTicket(int sessionId, int stationType, out TicketInfo ticketInfo) {
            object[] results = this.Invoke("GetNewTicket", new object[] {
                        sessionId,
                        stationType});
            ticketInfo = ((TicketInfo)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewTicketAsync(int sessionId, int stationType) {
            this.GetNewTicketAsync(sessionId, stationType, null);
        }
        
        /// <remarks/>
        public void GetNewTicketAsync(int sessionId, int stationType, object userState) {
            if ((this.GetNewTicketOperationCompleted == null)) {
                this.GetNewTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewTicketOperationCompleted);
            }
            this.InvokeAsync("GetNewTicket", new object[] {
                        sessionId,
                        stationType}, this.GetNewTicketOperationCompleted, userState);
        }
        
        private void OnGetNewTicketOperationCompleted(object arg) {
            if ((this.GetNewTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewTicketCompleted(this, new GetNewTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#UpdateTicket", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool UpdateTicket(int sessionId, int ticketId, out TicketInfo ticketInfo) {
            object[] results = this.Invoke("UpdateTicket", new object[] {
                        sessionId,
                        ticketId});
            ticketInfo = ((TicketInfo)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(int sessionId, int ticketId) {
            this.UpdateTicketAsync(sessionId, ticketId, null);
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(int sessionId, int ticketId, object userState) {
            if ((this.UpdateTicketOperationCompleted == null)) {
                this.UpdateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTicketOperationCompleted);
            }
            this.InvokeAsync("UpdateTicket", new object[] {
                        sessionId,
                        ticketId}, this.UpdateTicketOperationCompleted, userState);
        }
        
        private void OnUpdateTicketOperationCompleted(object arg) {
            if ((this.UpdateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTicketCompleted(this, new UpdateTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ReleaseTicket", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseTicket(int sessionId, int ticketId) {
            this.Invoke("ReleaseTicket", new object[] {
                        sessionId,
                        ticketId});
        }
        
        /// <remarks/>
        public void ReleaseTicketAsync(int sessionId, int ticketId) {
            this.ReleaseTicketAsync(sessionId, ticketId, null);
        }
        
        /// <remarks/>
        public void ReleaseTicketAsync(int sessionId, int ticketId, object userState) {
            if ((this.ReleaseTicketOperationCompleted == null)) {
                this.ReleaseTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseTicketOperationCompleted);
            }
            this.InvokeAsync("ReleaseTicket", new object[] {
                        sessionId,
                        ticketId}, this.ReleaseTicketOperationCompleted, userState);
        }
        
        private void OnReleaseTicketOperationCompleted(object arg) {
            if ((this.ReleaseTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#HasRightsForBatchType", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool HasRightsForBatchType(int sessionId, int projectId, int batchTypeId, int roleType) {
            object[] results = this.Invoke("HasRightsForBatchType", new object[] {
                        sessionId,
                        projectId,
                        batchTypeId,
                        roleType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasRightsForBatchTypeAsync(int sessionId, int projectId, int batchTypeId, int roleType) {
            this.HasRightsForBatchTypeAsync(sessionId, projectId, batchTypeId, roleType, null);
        }
        
        /// <remarks/>
        public void HasRightsForBatchTypeAsync(int sessionId, int projectId, int batchTypeId, int roleType, object userState) {
            if ((this.HasRightsForBatchTypeOperationCompleted == null)) {
                this.HasRightsForBatchTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasRightsForBatchTypeOperationCompleted);
            }
            this.InvokeAsync("HasRightsForBatchType", new object[] {
                        sessionId,
                        projectId,
                        batchTypeId,
                        roleType}, this.HasRightsForBatchTypeOperationCompleted, userState);
        }
        
        private void OnHasRightsForBatchTypeOperationCompleted(object arg) {
            if ((this.HasRightsForBatchTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasRightsForBatchTypeCompleted(this, new HasRightsForBatchTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetSettingValue", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("value")]
        public string GetSettingValue(int userId, int projectId, int batchTypeId, string settingName) {
            object[] results = this.Invoke("GetSettingValue", new object[] {
                        userId,
                        projectId,
                        batchTypeId,
                        settingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSettingValueAsync(int userId, int projectId, int batchTypeId, string settingName) {
            this.GetSettingValueAsync(userId, projectId, batchTypeId, settingName, null);
        }
        
        /// <remarks/>
        public void GetSettingValueAsync(int userId, int projectId, int batchTypeId, string settingName, object userState) {
            if ((this.GetSettingValueOperationCompleted == null)) {
                this.GetSettingValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSettingValueOperationCompleted);
            }
            this.InvokeAsync("GetSettingValue", new object[] {
                        userId,
                        projectId,
                        batchTypeId,
                        settingName}, this.GetSettingValueOperationCompleted, userState);
        }
        
        private void OnGetSettingValueOperationCompleted(object arg) {
            if ((this.GetSettingValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSettingValueCompleted(this, new GetSettingValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetSettingValue", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSettingValue(int userId, int projectId, int batchTypeId, string settingName, string settingValue) {
            this.Invoke("SetSettingValue", new object[] {
                        userId,
                        projectId,
                        batchTypeId,
                        settingName,
                        settingValue});
        }
        
        /// <remarks/>
        public void SetSettingValueAsync(int userId, int projectId, int batchTypeId, string settingName, string settingValue) {
            this.SetSettingValueAsync(userId, projectId, batchTypeId, settingName, settingValue, null);
        }
        
        /// <remarks/>
        public void SetSettingValueAsync(int userId, int projectId, int batchTypeId, string settingName, string settingValue, object userState) {
            if ((this.SetSettingValueOperationCompleted == null)) {
                this.SetSettingValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSettingValueOperationCompleted);
            }
            this.InvokeAsync("SetSettingValue", new object[] {
                        userId,
                        projectId,
                        batchTypeId,
                        settingName,
                        settingValue}, this.SetSettingValueOperationCompleted, userState);
        }
        
        private void OnSetSettingValueOperationCompleted(object arg) {
            if ((this.SetSettingValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSettingValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#FindUser", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userId")]
        public int FindUser(string userLogin) {
            object[] results = this.Invoke("FindUser", new object[] {
                        userLogin});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FindUserAsync(string userLogin) {
            this.FindUserAsync(userLogin, null);
        }
        
        /// <remarks/>
        public void FindUserAsync(string userLogin, object userState) {
            if ((this.FindUserOperationCompleted == null)) {
                this.FindUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindUserOperationCompleted);
            }
            this.InvokeAsync("FindUser", new object[] {
                        userLogin}, this.FindUserOperationCompleted, userState);
        }
        
        private void OnFindUserOperationCompleted(object arg) {
            if ((this.FindUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindUserCompleted(this, new FindUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#AddUserIfNotExist", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userId")]
        public int AddUserIfNotExist() {
            object[] results = this.Invoke("AddUserIfNotExist", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserIfNotExistAsync() {
            this.AddUserIfNotExistAsync(null);
        }
        
        /// <remarks/>
        public void AddUserIfNotExistAsync(object userState) {
            if ((this.AddUserIfNotExistOperationCompleted == null)) {
                this.AddUserIfNotExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserIfNotExistOperationCompleted);
            }
            this.InvokeAsync("AddUserIfNotExist", new object[0], this.AddUserIfNotExistOperationCompleted, userState);
        }
        
        private void OnAddUserIfNotExistOperationCompleted(object arg) {
            if ((this.AddUserIfNotExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserIfNotExistCompleted(this, new AddUserIfNotExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetUser", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool GetUser(int userId, out User user) {
            object[] results = this.Invoke("GetUser", new object[] {
                        userId});
            user = ((User)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(int userId) {
            this.GetUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(int userId, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        userId}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetUsers", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("users")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public User[] GetUsers() {
            object[] results = this.Invoke("GetUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAvailableUsers", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("users")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public User[] GetAvailableUsers(int projectId, int batchTypeId, int stageExternalId) {
            object[] results = this.Invoke("GetAvailableUsers", new object[] {
                        projectId,
                        batchTypeId,
                        stageExternalId});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableUsersAsync(int projectId, int batchTypeId, int stageExternalId) {
            this.GetAvailableUsersAsync(projectId, batchTypeId, stageExternalId, null);
        }
        
        /// <remarks/>
        public void GetAvailableUsersAsync(int projectId, int batchTypeId, int stageExternalId, object userState) {
            if ((this.GetAvailableUsersOperationCompleted == null)) {
                this.GetAvailableUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableUsersOperationCompleted);
            }
            this.InvokeAsync("GetAvailableUsers", new object[] {
                        projectId,
                        batchTypeId,
                        stageExternalId}, this.GetAvailableUsersOperationCompleted, userState);
        }
        
        private void OnGetAvailableUsersOperationCompleted(object arg) {
            if ((this.GetAvailableUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableUsersCompleted(this, new GetAvailableUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CreateRequest", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("requestId")]
        public int CreateRequest(ServerRequest request) {
            object[] results = this.Invoke("CreateRequest", new object[] {
                        request});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRequestAsync(ServerRequest request) {
            this.CreateRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void CreateRequestAsync(ServerRequest request, object userState) {
            if ((this.CreateRequestOperationCompleted == null)) {
                this.CreateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRequestOperationCompleted);
            }
            this.InvokeAsync("CreateRequest", new object[] {
                        request}, this.CreateRequestOperationCompleted, userState);
        }
        
        private void OnCreateRequestOperationCompleted(object arg) {
            if ((this.CreateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRequestCompleted(this, new CreateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#DeleteRequest", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRequest(int requestId, int sessionId) {
            this.Invoke("DeleteRequest", new object[] {
                        requestId,
                        sessionId});
        }
        
        /// <remarks/>
        public void DeleteRequestAsync(int requestId, int sessionId) {
            this.DeleteRequestAsync(requestId, sessionId, null);
        }
        
        /// <remarks/>
        public void DeleteRequestAsync(int requestId, int sessionId, object userState) {
            if ((this.DeleteRequestOperationCompleted == null)) {
                this.DeleteRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequestOperationCompleted);
            }
            this.InvokeAsync("DeleteRequest", new object[] {
                        requestId,
                        sessionId}, this.DeleteRequestOperationCompleted, userState);
        }
        
        private void OnDeleteRequestOperationCompleted(object arg) {
            if ((this.DeleteRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetRequestStatus", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("status")]
        public int GetRequestStatus(int requestId) {
            object[] results = this.Invoke("GetRequestStatus", new object[] {
                        requestId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestStatusAsync(int requestId) {
            this.GetRequestStatusAsync(requestId, null);
        }
        
        /// <remarks/>
        public void GetRequestStatusAsync(int requestId, object userState) {
            if ((this.GetRequestStatusOperationCompleted == null)) {
                this.GetRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestStatusOperationCompleted);
            }
            this.InvokeAsync("GetRequestStatus", new object[] {
                        requestId}, this.GetRequestStatusOperationCompleted, userState);
        }
        
        private void OnGetRequestStatusOperationCompleted(object arg) {
            if ((this.GetRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestStatusCompleted(this, new GetRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetRequestStatus", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRequestStatus(int requestId, int status) {
            this.Invoke("SetRequestStatus", new object[] {
                        requestId,
                        status});
        }
        
        /// <remarks/>
        public void SetRequestStatusAsync(int requestId, int status) {
            this.SetRequestStatusAsync(requestId, status, null);
        }
        
        /// <remarks/>
        public void SetRequestStatusAsync(int requestId, int status, object userState) {
            if ((this.SetRequestStatusOperationCompleted == null)) {
                this.SetRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRequestStatusOperationCompleted);
            }
            this.InvokeAsync("SetRequestStatus", new object[] {
                        requestId,
                        status}, this.SetRequestStatusOperationCompleted, userState);
        }
        
        private void OnSetRequestStatusOperationCompleted(object arg) {
            if ((this.SetRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRequestStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetRequests", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("requests", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ServerRequest[] GetRequests(int batchId, int taskId, int sessionId) {
            object[] results = this.Invoke("GetRequests", new object[] {
                        batchId,
                        taskId,
                        sessionId});
            return ((ServerRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRequestsAsync(int batchId, int taskId, int sessionId) {
            this.GetRequestsAsync(batchId, taskId, sessionId, null);
        }
        
        /// <remarks/>
        public void GetRequestsAsync(int batchId, int taskId, int sessionId, object userState) {
            if ((this.GetRequestsOperationCompleted == null)) {
                this.GetRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequestsOperationCompleted);
            }
            this.InvokeAsync("GetRequests", new object[] {
                        batchId,
                        taskId,
                        sessionId}, this.GetRequestsOperationCompleted, userState);
        }
        
        private void OnGetRequestsOperationCompleted(object arg) {
            if ((this.GetRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequestsCompleted(this, new GetRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetAvailableQueues", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("queueInfo", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Queue[] GetAvailableQueues(int sessionId, int projectId) {
            object[] results = this.Invoke("GetAvailableQueues", new object[] {
                        sessionId,
                        projectId});
            return ((Queue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAvailableQueuesAsync(int sessionId, int projectId) {
            this.GetAvailableQueuesAsync(sessionId, projectId, null);
        }
        
        /// <remarks/>
        public void GetAvailableQueuesAsync(int sessionId, int projectId, object userState) {
            if ((this.GetAvailableQueuesOperationCompleted == null)) {
                this.GetAvailableQueuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAvailableQueuesOperationCompleted);
            }
            this.InvokeAsync("GetAvailableQueues", new object[] {
                        sessionId,
                        projectId}, this.GetAvailableQueuesOperationCompleted, userState);
        }
        
        private void OnGetAvailableQueuesOperationCompleted(object arg) {
            if ((this.GetAvailableQueuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAvailableQueuesCompleted(this, new GetAvailableQueuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetUserStatistics", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userStat")]
        public UserStatistics GetUserStatistics(int userId, long fromDate, long toDate) {
            object[] results = this.Invoke("GetUserStatistics", new object[] {
                        userId,
                        fromDate,
                        toDate});
            return ((UserStatistics)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserStatisticsAsync(int userId, long fromDate, long toDate) {
            this.GetUserStatisticsAsync(userId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void GetUserStatisticsAsync(int userId, long fromDate, long toDate, object userState) {
            if ((this.GetUserStatisticsOperationCompleted == null)) {
                this.GetUserStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetUserStatistics", new object[] {
                        userId,
                        fromDate,
                        toDate}, this.GetUserStatisticsOperationCompleted, userState);
        }
        
        private void OnGetUserStatisticsOperationCompleted(object arg) {
            if ((this.GetUserStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserStatisticsCompleted(this, new GetUserStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetRoles", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("roles", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Role[] GetRoles(int projectId) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        projectId});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(int projectId) {
            this.GetRolesAsync(projectId, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(int projectId, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        projectId}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetUserRoles", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("roles", IsNullable=true)]
        public int[] GetUserRoles(int projectId) {
            object[] results = this.Invoke("GetUserRoles", new object[] {
                        projectId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(int projectId) {
            this.GetUserRolesAsync(projectId, null);
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(int projectId, object userState) {
            if ((this.GetUserRolesOperationCompleted == null)) {
                this.GetUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRolesOperationCompleted);
            }
            this.InvokeAsync("GetUserRoles", new object[] {
                        projectId}, this.GetUserRolesOperationCompleted, userState);
        }
        
        private void OnGetUserRolesOperationCompleted(object arg) {
            if ((this.GetUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRolesCompleted(this, new GetUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetTaskPriority", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTaskPriority(int sessionId, int taskId, int priority) {
            this.Invoke("SetTaskPriority", new object[] {
                        sessionId,
                        taskId,
                        priority});
        }
        
        /// <remarks/>
        public void SetTaskPriorityAsync(int sessionId, int taskId, int priority) {
            this.SetTaskPriorityAsync(sessionId, taskId, priority, null);
        }
        
        /// <remarks/>
        public void SetTaskPriorityAsync(int sessionId, int taskId, int priority, object userState) {
            if ((this.SetTaskPriorityOperationCompleted == null)) {
                this.SetTaskPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTaskPriorityOperationCompleted);
            }
            this.InvokeAsync("SetTaskPriority", new object[] {
                        sessionId,
                        taskId,
                        priority}, this.SetTaskPriorityOperationCompleted, userState);
        }
        
        private void OnSetTaskPriorityOperationCompleted(object arg) {
            if ((this.SetTaskPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTaskPriorityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SetDocumentPriority", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDocumentPriority(int sessionId, int batchId, int documentId, int priority) {
            this.Invoke("SetDocumentPriority", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        priority});
        }
        
        /// <remarks/>
        public void SetDocumentPriorityAsync(int sessionId, int batchId, int documentId, int priority) {
            this.SetDocumentPriorityAsync(sessionId, batchId, documentId, priority, null);
        }
        
        /// <remarks/>
        public void SetDocumentPriorityAsync(int sessionId, int batchId, int documentId, int priority, object userState) {
            if ((this.SetDocumentPriorityOperationCompleted == null)) {
                this.SetDocumentPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDocumentPriorityOperationCompleted);
            }
            this.InvokeAsync("SetDocumentPriority", new object[] {
                        sessionId,
                        batchId,
                        documentId,
                        priority}, this.SetDocumentPriorityOperationCompleted, userState);
        }
        
        private void OnSetDocumentPriorityOperationCompleted(object arg) {
            if ((this.SetDocumentPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDocumentPriorityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#GetCurrentUserIdentity", RequestNamespace="urn:http://www.abbyy.com/FlexiCapture", ResponseNamespace="urn:http://www.abbyy.com/FlexiCapture", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("userIdentity")]
        public UserIdentity GetCurrentUserIdentity() {
            object[] results = this.Invoke("GetCurrentUserIdentity", new object[0]);
            return ((UserIdentity)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentUserIdentityAsync() {
            this.GetCurrentUserIdentityAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentUserIdentityAsync(object userState) {
            if ((this.GetCurrentUserIdentityOperationCompleted == null)) {
                this.GetCurrentUserIdentityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentUserIdentityOperationCompleted);
            }
            this.InvokeAsync("GetCurrentUserIdentity", new object[0], this.GetCurrentUserIdentityOperationCompleted, userState);
        }
        
        private void OnGetCurrentUserIdentityOperationCompleted(object arg) {
            if ((this.GetCurrentUserIdentityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentUserIdentityCompleted(this, new GetCurrentUserIdentityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Project {
        
        private int idField;
        
        private string nameField;
        
        private string guidField;
        
        private bool isTestProjectField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTestProject {
            get {
                return this.isTestProjectField;
            }
            set {
                this.isTestProjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class UserIdentity {
        
        private string nameField;
        
        private string tenantField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Tenant {
            get {
                return this.tenantField;
            }
            set {
                this.tenantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Role {
        
        private int idField;
        
        private int typeField;
        
        private string nameField;
        
        private int projectIdField;
        
        private int attributesField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int Attributes {
            get {
                return this.attributesField;
            }
            set {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class UserStatistics {
        
        private int batchesCountField;
        
        private int documentsCountField;
        
        private int pagesCountField;
        
        /// <remarks/>
        public int BatchesCount {
            get {
                return this.batchesCountField;
            }
            set {
                this.batchesCountField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentsCount {
            get {
                return this.documentsCountField;
            }
            set {
                this.documentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int PagesCount {
            get {
                return this.pagesCountField;
            }
            set {
                this.pagesCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Queue {
        
        private string nameField;
        
        private int stageTypeField;
        
        private int tasksCountField;
        
        private int userTasksCountField;
        
        private int postponedTaskCountField;
        
        private bool isEnabledField;
        
        private int idField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int StageType {
            get {
                return this.stageTypeField;
            }
            set {
                this.stageTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TasksCount {
            get {
                return this.tasksCountField;
            }
            set {
                this.tasksCountField = value;
            }
        }
        
        /// <remarks/>
        public int UserTasksCount {
            get {
                return this.userTasksCountField;
            }
            set {
                this.userTasksCountField = value;
            }
        }
        
        /// <remarks/>
        public int PostponedTaskCount {
            get {
                return this.postponedTaskCountField;
            }
            set {
                this.postponedTaskCountField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class ServerRequest {
        
        private int idField;
        
        private int batchIdField;
        
        private int taskIdField;
        
        private int sessionIdField;
        
        private int statusField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public int SessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class User {
        
        private int idField;
        
        private string nameField;
        
        private string fullNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class LicenseCustomFeature {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class TicketInfo {
        
        private int ticketIdField;
        
        private string licenseNumberField;
        
        private int stationTypeField;
        
        private long expirationDateField;
        
        private long expirationPeriodField;
        
        private uint availableModulesField;
        
        private int issuedForSessionIdField;
        
        private LicenseCustomFeature[] customFeaturesField;
        
        private string signatureField;
        
        /// <remarks/>
        public int TicketId {
            get {
                return this.ticketIdField;
            }
            set {
                this.ticketIdField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseNumber {
            get {
                return this.licenseNumberField;
            }
            set {
                this.licenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public int StationType {
            get {
                return this.stationTypeField;
            }
            set {
                this.stationTypeField = value;
            }
        }
        
        /// <remarks/>
        public long ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public long ExpirationPeriod {
            get {
                return this.expirationPeriodField;
            }
            set {
                this.expirationPeriodField = value;
            }
        }
        
        /// <remarks/>
        public uint AvailableModules {
            get {
                return this.availableModulesField;
            }
            set {
                this.availableModulesField = value;
            }
        }
        
        /// <remarks/>
        public int IssuedForSessionId {
            get {
                return this.issuedForSessionIdField;
            }
            set {
                this.issuedForSessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LicenseCustomFeature[] CustomFeatures {
            get {
                return this.customFeaturesField;
            }
            set {
                this.customFeaturesField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Task {
        
        private int idField;
        
        private int projectIdField;
        
        private int batchTypeIdField;
        
        private int batchIdField;
        
        private int priorityField;
        
        private uint statusField;
        
        private long creationTimeField;
        
        private long modificationTimeField;
        
        private string commentField;
        
        private int stageTypeField;
        
        private int userIdField;
        
        private int flagsField;
        
        private int creatorIdField;
        
        private string batchNameField;
        
        private int stageExternalIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int BatchTypeId {
            get {
                return this.batchTypeIdField;
            }
            set {
                this.batchTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public uint Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long CreationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        public long ModificationTime {
            get {
                return this.modificationTimeField;
            }
            set {
                this.modificationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public int StageType {
            get {
                return this.stageTypeField;
            }
            set {
                this.stageTypeField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public string BatchName {
            get {
                return this.batchNameField;
            }
            set {
                this.batchNameField = value;
            }
        }
        
        /// <remarks/>
        public int StageExternalId {
            get {
                return this.stageExternalIdField;
            }
            set {
                this.stageExternalIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class LogRecord {
        
        private int typeField;
        
        private int sessionIdField;
        
        private int userIdField;
        
        private string machineIdField;
        
        private int roleIdField;
        
        private int taskIdField;
        
        private int projectIdField;
        
        private int batchIdField;
        
        private int documentIdField;
        
        private string commentField;
        
        private string detailsField;
        
        private long timeField;
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int SessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string MachineId {
            get {
                return this.machineIdField;
            }
            set {
                this.machineIdField = value;
            }
        }
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public long Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class OrderItem {
        
        private int idField;
        
        private int indexField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Page {
        
        private int idField;
        
        private int pageIndexField;
        
        private string sourceFileNameField;
        
        private int sourcePageNumberField;
        
        private int sourceTypeField;
        
        private string sourceDetailsField;
        
        private string commentField;
        
        private string errorTextField;
        
        private string externalIdField;
        
        private bool hasAttachmentsField;
        
        private int uncertainSymbolsField;
        
        private int verificationSymbolsField;
        
        private int totalSymbolsField;
        
        private int fileVersionField;
        
        private int flagsField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public string SourceFileName {
            get {
                return this.sourceFileNameField;
            }
            set {
                this.sourceFileNameField = value;
            }
        }
        
        /// <remarks/>
        public int SourcePageNumber {
            get {
                return this.sourcePageNumberField;
            }
            set {
                this.sourcePageNumberField = value;
            }
        }
        
        /// <remarks/>
        public int SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SourceDetails {
            get {
                return this.sourceDetailsField;
            }
            set {
                this.sourceDetailsField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAttachments {
            get {
                return this.hasAttachmentsField;
            }
            set {
                this.hasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        public int UncertainSymbols {
            get {
                return this.uncertainSymbolsField;
            }
            set {
                this.uncertainSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public int VerificationSymbols {
            get {
                return this.verificationSymbolsField;
            }
            set {
                this.verificationSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalSymbols {
            get {
                return this.totalSymbolsField;
            }
            set {
                this.totalSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public int FileVersion {
            get {
                return this.fileVersionField;
            }
            set {
                this.fileVersionField = value;
            }
        }
        
        /// <remarks/>
        public int Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Document {
        
        private int idField;
        
        private int batchIdField;
        
        private int parentIdField;
        
        private int docIndexField;
        
        private string templateNameField;
        
        private int processingStageTypeField;
        
        private string commentField;
        
        private Page[] pagesField;
        
        private bool isProcessedField;
        
        private bool hasProcessingErrorsField;
        
        private bool hasDocumentErrorsField;
        
        private string errorTextField;
        
        private string externalIdField;
        
        private RegistrationProperty[] propertiesField;
        
        private int priorityField;
        
        private int fileVersionField;
        
        private int ownerIdField;
        
        private int stageExternalIdField;
        
        private int taskIdField;
        
        private int uncertainSymbolsField;
        
        private int verificationSymbolsField;
        
        private int totalSymbolsField;
        
        private bool hasErrorsField;
        
        private bool hasWarningsField;
        
        private bool hasAssemblingErrorsField;
        
        private bool hasAttachmentsField;
        
        private int flagsField;
        
        private OrderItem[] childrenOrderField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public int ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public int DocIndex {
            get {
                return this.docIndexField;
            }
            set {
                this.docIndexField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessingStageType {
            get {
                return this.processingStageTypeField;
            }
            set {
                this.processingStageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Page[] Pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsProcessed {
            get {
                return this.isProcessedField;
            }
            set {
                this.isProcessedField = value;
            }
        }
        
        /// <remarks/>
        public bool HasProcessingErrors {
            get {
                return this.hasProcessingErrorsField;
            }
            set {
                this.hasProcessingErrorsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDocumentErrors {
            get {
                return this.hasDocumentErrorsField;
            }
            set {
                this.hasDocumentErrorsField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RegistrationProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public int FileVersion {
            get {
                return this.fileVersionField;
            }
            set {
                this.fileVersionField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int StageExternalId {
            get {
                return this.stageExternalIdField;
            }
            set {
                this.stageExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public int UncertainSymbols {
            get {
                return this.uncertainSymbolsField;
            }
            set {
                this.uncertainSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public int VerificationSymbols {
            get {
                return this.verificationSymbolsField;
            }
            set {
                this.verificationSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalSymbols {
            get {
                return this.totalSymbolsField;
            }
            set {
                this.totalSymbolsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasErrors {
            get {
                return this.hasErrorsField;
            }
            set {
                this.hasErrorsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasWarnings {
            get {
                return this.hasWarningsField;
            }
            set {
                this.hasWarningsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAssemblingErrors {
            get {
                return this.hasAssemblingErrorsField;
            }
            set {
                this.hasAssemblingErrorsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAttachments {
            get {
                return this.hasAttachmentsField;
            }
            set {
                this.hasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        public int Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public OrderItem[] ChildrenOrder {
            get {
                return this.childrenOrderField;
            }
            set {
                this.childrenOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class RegistrationProperty {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class File {
        
        private string nameField;
        
        private byte[] bytesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Bytes {
            get {
                return this.bytesField;
            }
            set {
                this.bytesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Batch {
        
        private int idField;
        
        private string nameField;
        
        private int batchTypeIdField;
        
        private int priorityField;
        
        private string descriptionField;
        
        private bool hasAttachmentsField;
        
        private RegistrationProperty[] propertiesField;
        
        private long creationDateField;
        
        private int documentsCountField;
        
        private int pagesCountField;
        
        private int recognizedSymbolsCountField;
        
        private int verificationSymbolsCountField;
        
        private int uncertainSymbolsCountField;
        
        private int assembledDocumentsCountField;
        
        private int recognizedDocumentsCountField;
        
        private int verifiedDocumentsCountField;
        
        private int exportedDocumentsCountField;
        
        private int stageExternalIdField;
        
        private string errorTextField;
        
        private int ownerIdField;
        
        private int creatorIdField;
        
        private long sLAStartDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int BatchTypeId {
            get {
                return this.batchTypeIdField;
            }
            set {
                this.batchTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAttachments {
            get {
                return this.hasAttachmentsField;
            }
            set {
                this.hasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RegistrationProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
            }
        }
        
        /// <remarks/>
        public long CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentsCount {
            get {
                return this.documentsCountField;
            }
            set {
                this.documentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int PagesCount {
            get {
                return this.pagesCountField;
            }
            set {
                this.pagesCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecognizedSymbolsCount {
            get {
                return this.recognizedSymbolsCountField;
            }
            set {
                this.recognizedSymbolsCountField = value;
            }
        }
        
        /// <remarks/>
        public int VerificationSymbolsCount {
            get {
                return this.verificationSymbolsCountField;
            }
            set {
                this.verificationSymbolsCountField = value;
            }
        }
        
        /// <remarks/>
        public int UncertainSymbolsCount {
            get {
                return this.uncertainSymbolsCountField;
            }
            set {
                this.uncertainSymbolsCountField = value;
            }
        }
        
        /// <remarks/>
        public int AssembledDocumentsCount {
            get {
                return this.assembledDocumentsCountField;
            }
            set {
                this.assembledDocumentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecognizedDocumentsCount {
            get {
                return this.recognizedDocumentsCountField;
            }
            set {
                this.recognizedDocumentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int VerifiedDocumentsCount {
            get {
                return this.verifiedDocumentsCountField;
            }
            set {
                this.verifiedDocumentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int ExportedDocumentsCount {
            get {
                return this.exportedDocumentsCountField;
            }
            set {
                this.exportedDocumentsCountField = value;
            }
        }
        
        /// <remarks/>
        public int StageExternalId {
            get {
                return this.stageExternalIdField;
            }
            set {
                this.stageExternalIdField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public long SLAStartDate {
            get {
                return this.sLAStartDateField;
            }
            set {
                this.sLAStartDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class BatchTypeIdentity {
        
        private int idField;
        
        private int projectIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class RegistrationPropertyDef {
        
        private int idField;
        
        private string nameField;
        
        private bool isRequiredField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class BatchType {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private RegistrationPropertyDef[] propertyDefsField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RegistrationPropertyDef[] PropertyDefs {
            get {
                return this.propertyDefsField;
            }
            set {
                this.propertyDefsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class Template {
        
        private int idField;
        
        private string nameField;
        
        private int versionField;
        
        private bool isDisabledField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDisabled {
            get {
                return this.isDisabledField;
            }
            set {
                this.isDisabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:http://www.abbyy.com/FlexiCapture")]
    public partial class ProcessingStage {
        
        private int idField;
        
        private int externalIdField;
        
        private int projectIdField;
        
        private int batchTypeIdField;
        
        private int typeField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int BatchTypeId {
            get {
                return this.batchTypeIdField;
            }
            set {
                this.batchTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void OpenSessionCompletedEventHandler(object sender, OpenSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSessionInfoCompletedEventHandler(object sender, GetSessionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string computerName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int roleType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProjectsCompletedEventHandler(object sender, GetProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProjectsForUserCompletedEventHandler(object sender, GetProjectsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetProcessingStagesCompletedEventHandler(object sender, GetProcessingStagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessingStagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessingStagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcessingStage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcessingStage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTemplatesCompletedEventHandler(object sender, GetTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Template[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Template[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchTypeTemplatesCompletedEventHandler(object sender, GetBatchTypeTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTypeTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTypeTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CloseSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void OpenProjectCompletedEventHandler(object sender, OpenProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CloseProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchTypesCompletedEventHandler(object sender, GetBatchTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllowedBatchTypesCompletedEventHandler(object sender, GetAllowedBatchTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllowedBatchTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllowedBatchTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchTypeIdentity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchTypeIdentity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddNewBatchCompletedEventHandler(object sender, AddNewBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteBatchCompletedEventHandler(object sender, DeleteBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddNewImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchIdsRangeCompletedEventHandler(object sender, GetBatchIdsRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchIdsRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchIdsRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rangeEnd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddNewDocumentCompletedEventHandler(object sender, AddNewDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddNewPageCompletedEventHandler(object sender, AddNewPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void MoveBatchItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ProcessBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchPercentCompletedCompletedEventHandler(object sender, GetBatchPercentCompletedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchPercentCompletedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchPercentCompletedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDocumentsCompletedEventHandler(object sender, GetDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDocumentResultsListCompletedEventHandler(object sender, GetDocumentResultsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentResultsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentResultsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoadDocumentResultCompletedEventHandler(object sender, LoadDocumentResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadDocumentResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadDocumentResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void IsSessionExistsCompletedEventHandler(object sender, IsSessionExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSessionExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSessionExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchTypeCompletedEventHandler(object sender, GetBatchTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchesCompletedEventHandler(object sender, GetBatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetBatchCompletedEventHandler(object sender, GetBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Batch Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Batch)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void OpenBatchCompletedEventHandler(object sender, OpenBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CloseBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeletePageCompletedEventHandler(object sender, DeletePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, DeleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReplacePageImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetDocumentPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoadCustomFileCompletedEventHandler(object sender, LoadCustomFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCustomFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCustomFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveCustomFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveCustomFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCustomFileNamesCompletedEventHandler(object sender, GetCustomFileNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomFileNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomFileNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoadAttachmentCompletedEventHandler(object sender, LoadAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAttachmentNamesCompletedEventHandler(object sender, GetAttachmentNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WriteToLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAvailableTasksCompletedEventHandler(object sender, GetAvailableTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAvailableTasksByStageIdCompletedEventHandler(object sender, GetAvailableTasksByStageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableTasksByStageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableTasksByStageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTaskInfoCompletedEventHandler(object sender, GetTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateTaskCompletedEventHandler(object sender, CreateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void OpenTaskCompletedEventHandler(object sender, OpenTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTaskByStageIdCompletedEventHandler(object sender, GetTaskByStageIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskByStageIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskByStageIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCurrentTaskCompletedEventHandler(object sender, GetCurrentTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTaskDocumentsCompletedEventHandler(object sender, GetTaskDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CloseTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CancelTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PostponeTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPostponedTasksCompletedEventHandler(object sender, GetPostponedTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostponedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostponedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SendTaskToExceptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SendTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetNewTicketCompletedEventHandler(object sender, GetNewTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TicketInfo ticketInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateTicketCompletedEventHandler(object sender, UpdateTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TicketInfo ticketInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReleaseTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HasRightsForBatchTypeCompletedEventHandler(object sender, HasRightsForBatchTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasRightsForBatchTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasRightsForBatchTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSettingValueCompletedEventHandler(object sender, GetSettingValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSettingValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSettingValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetSettingValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void FindUserCompletedEventHandler(object sender, FindUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddUserIfNotExistCompletedEventHandler(object sender, AddUserIfNotExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserIfNotExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserIfNotExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public User user {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAvailableUsersCompletedEventHandler(object sender, GetAvailableUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateRequestCompletedEventHandler(object sender, CreateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRequestStatusCompletedEventHandler(object sender, GetRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetRequestStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRequestsCompletedEventHandler(object sender, GetRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServerRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServerRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAvailableQueuesCompletedEventHandler(object sender, GetAvailableQueuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAvailableQueuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAvailableQueuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Queue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Queue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserStatisticsCompletedEventHandler(object sender, GetUserStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserStatistics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserStatistics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserRolesCompletedEventHandler(object sender, GetUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetTaskPriorityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetDocumentPriorityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetCurrentUserIdentityCompletedEventHandler(object sender, GetCurrentUserIdentityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentUserIdentityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentUserIdentityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserIdentity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserIdentity)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591